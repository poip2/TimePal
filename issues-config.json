[
  {
    "title": "🏗️ 项目初始化与环境搭建",
    "body": "## 📋 任务描述\n完成TimePal项目的基础环境搭建和项目初始化\n\n## ✅ 检查清单\n- [ ] 安装Flutter开发环境（3.0+版本）\n- [ ] 配置Node.js开发环境\n- [ ] 搭建PostgreSQL数据库\n- [ ] 创建Flutter项目结构\n- [ ] 创建Express.js后端项目\n- [ ] 配置项目依赖\n- [ ] 设置代码规范和Git工作流\n- [ ] 配置开发工具（VSCode、Postman等）\n\n## 📁 相关文件\n- docs/Implementation.md 第一阶段任务\n- docs/ProjectStructure.md 项目结构规范\n\n## ⏱️ 预计时间\n2-3天\n\n## 🏷️ 标签\nsetup, infrastructure, high-priority",
    "labels": ["setup", "infrastructure", "high-priority"]
  },
  {
    "title": "🔐 用户认证系统 - 后端API",
    "body": "## 📋 任务描述\n实现完整的用户认证系统后端API\n\n## ✅ 检查清单\n- [ ] 设计用户表结构（users表）\n- [ ] 实现用户注册API (POST /api/auth/register)\n- [ ] 实现用户登录API (POST /api/auth/login)\n- [ ] JWT令牌生成与验证\n- [ ] 密码加密存储（bcryptjs）\n- [ ] 输入验证和错误处理\n- [ ] API文档编写\n- [ ] 单元测试编写\n\n## 🔧 技术规范\n- 使用JWT进行身份验证\n- 密码加密：bcryptjs\n- 输入验证：Joi\n- 返回统一格式的响应\n\n## 📁 相关文件\n- backend/src/controllers/authController.js\n- backend/src/models/User.js\n- backend/src/routes/auth.js\n\n## ⏱️ 预计时间\n3天\n\n## 🏷️ 标签\nbackend, auth, api, security",
    "labels": ["backend", "auth", "api", "security"]
  },
  {
    "title": "🖥️ 用户认证界面 - 前端",
    "body": "## 📋 任务描述\n实现用户认证相关的前端界面\n\n## ✅ 检查清单\n- [ ] 创建登录页面 (LoginPage)\n- [ ] 创建注册页面 (RegisterPage)\n- [ ] 实现表单验证（前端）\n- [ ] 集成后端认证API\n- [ ] 实现状态管理（Provider）\n- [ ] 添加加载状态和错误处理\n- [ ] 实现自动登录（记住我功能）\n- [ ] 响应式设计适配\n\n## 🎨 UI/UX要求\n- 遵循设计系统规范（颜色、字体、间距）\n- 支持深色/浅色主题切换\n- 表单验证友好的错误提示\n- 加载动画和状态反馈\n\n## 📁 相关文件\n- frontend/lib/presentation/pages/auth/login_page.dart\n- frontend/lib/presentation/pages/auth/register_page.dart\n- frontend/lib/data/providers/auth_provider.dart\n\n## ⏱️ 预计时间\n3天\n\n## 🏷️ 标签\nfrontend, auth, ui, mobile",
    "labels": ["frontend", "auth", "ui", "mobile"]
  },
  {
    "title": "🎯 习惯CRUD操作 - 后端API",
    "body": "## 📋 任务描述\n实现习惯的创建、读取、更新、删除操作API\n\n## ✅ 检查清单\n- [ ] 设计习惯表结构（habits表）\n- [ ] 创建习惯API (POST /api/habits)\n- [ ] 获取习惯列表API (GET /api/habits)\n- [ ] 获取单个习惯API (GET /api/habits/:id)\n- [ ] 更新习惯API (PUT /api/habits/:id)\n- [ ] 删除习惯API (DELETE /api/habits/:id)\n- [ ] 习惯分类管理\n- [ ] 权限验证（用户只能操作自己的习惯）\n\n## 📊 数据模型\nHabit {\n  id: number\n  user_id: number\n  name: string\n  description: string\n  frequency: 'daily' | 'weekly' | 'monthly'\n  category: string\n  icon: string\n  color: string\n  reminder_time: time\n  is_active: boolean\n}\n\n## ⏱️ 预计时间\n2天\n\n## 🏷️ 标签\nbackend, habits, api, crud",
    "labels": ["backend", "habits", "api", "crud"]
  },
  {
    "title": "📱 习惯管理界面 - 前端",
    "body": "## 📋 任务描述\n实现习惯管理的前端界面\n\n## ✅ 检查清单\n- [ ] 习惯列表页面 (HabitListPage)\n- [ ] 习惯创建/编辑页面 (HabitCreatePage, HabitEditPage)\n- [ ] 习惯详情页面 (HabitDetailPage)\n- [ ] 习惯卡片组件 (HabitCard)\n- [ ] 习惯分类筛选功能\n- [ ] 拖拽排序功能\n- [ ] 滑动删除操作\n- [ ] 空状态处理\n\n## 🎨 组件设计\n- 习惯卡片：显示图标、名称、连续天数、进度\n- 创建表单：名称、描述、频率、分类、图标、颜色、提醒时间\n- 详情页面：完整信息、统计图表、操作按钮\n\n## 📁 相关文件\n- frontend/lib/presentation/pages/habits/habit_list_page.dart\n- frontend/lib/presentation/widgets/habit/habit_card.dart\n- frontend/lib/presentation/pages/habits/habit_create_page.dart\n\n## ⏱️ 预计时间\n4天\n\n## 🏷️ 标签\nfrontend, habits, ui, mobile",
    "labels": ["frontend", "habits", "ui", "mobile"]
  },
  {
    "title": "✅ 习惯打卡系统",
    "body": "## 📋 任务描述\n实现完整的习惯打卡功能\n\n## ✅ 检查清单\n- [ ] 设计打卡记录表（check_ins表）\n- [ ] 创建打卡API (POST /api/habits/:id/checkin)\n- [ ] 获取打卡状态API (GET /api/habits/:id/status)\n- [ ] 连续打卡计算逻辑\n- [ ] 打卡历史记录API (GET /api/habits/:id/history)\n- [ ] 前端打卡按钮组件 (CheckInButton)\n- [ ] 打卡动画效果\n- [ ] 打卡成功反馈\n\n## 🎯 业务逻辑\n- 每日只能打卡一次\n- 连续打卡天数计算\n- 打卡获得经验值和金币\n- 打卡记录不可修改\n\n## 📊 统计数据\n- 连续打卡天数\n- 总打卡次数\n- 打卡完成率\n- 月度/年度统计\n\n## ⏱️ 预计时间\n2天\n\n## 🏷️ 标签\nbackend, frontend, habits, gamification",
    "labels": ["backend", "frontend", "habits", "gamification"]
  },
  {
    "title": "🎮 游戏化系统 - 等级经验",
    "body": "## 📋 任务描述\n实现用户等级和经验值系统\n\n## ✅ 检查清单\n- [ ] 设计用户等级表（user_levels表）\n- [ ] 经验值计算逻辑\n- [ ] 等级升级机制\n- [ ] 经验值获取API (GET /api/user/experience)\n- [ ] 等级信息API (GET /api/user/level)\n- [ ] 前端等级显示组件\n- [ ] 升级动画效果\n- [ ] 等级奖励系统\n\n## 📈 升级规则\n- 每日打卡：+10经验值\n- 连续7天：+50经验值奖励\n- 连续30天：+200经验值奖励\n- 创建新习惯：+20经验值\n\n## 🏆 等级特权\n- 解锁新功能\n- 解锁新游戏\n- 自定义主题\n- 高级统计功能\n\n## ⏱️ 预计时间\n2天\n\n## 🏷️ 标签\nbackend, frontend, gamification, levels",
    "labels": ["backend", "frontend", "gamification", "levels"]
  },
  {
    "title": "💰 游戏化系统 - 货币系统",
    "body": "## 📋 任务描述\n实现应用内虚拟货币系统\n\n## ✅ 检查清单\n- [ ] 用户金币字段设计（users表）\n- [ ] 金币获取机制\n- [ ] 金币消费逻辑\n- [ ] 金币商店API (GET /api/shop/items)\n- [ ] 购买物品API (POST /api/shop/purchase)\n- [ ] 用户金币余额API (GET /api/user/coins)\n- [ ] 前端金币显示组件\n- [ ] 商店界面\n\n## 💎 金币获取方式\n- 每日打卡：+5金币\n- 连续7天：+25金币奖励\n- 连续30天：+100金币奖励\n- 完成成就：金币奖励\n- 游戏内获得：根据游戏表现\n\n## 🛒 商店商品\n- 主题皮肤\n- 应用图标\n- 特殊成就徽章\n- 游戏道具\n\n## ⏱️ 预计时间\n2天\n\n## 🏷️ 标签\nbackend, frontend, gamification, shop",
    "labels": ["backend", "frontend", "gamification", "shop"]
  },
  {
    "title": "🏅 成就系统",
    "body": "## 📋 任务描述\n实现用户成就系统\n\n## ✅ 检查清单\n- [ ] 设计成就表（achievements表）\n- [ ] 成就定义和配置\n- [ ] 成就检测逻辑\n- [ ] 成就解锁API (POST /api/achievements/unlock)\n- [ ] 用户成就列表API (GET /api/user/achievements)\n- [ ] 成就展示界面\n- [ ] 成就解锁通知\n- [ ] 成就分享功能\n\n## 🎯 成就类型\n- 新手成就：首次打卡、创建第一个习惯\n- 连续成就：7天、30天、100天连续打卡\n- 习惯成就：完成100次打卡、创建10个习惯\n- 游戏成就：首次玩游戏、游戏高分\n\n## 🔔 通知机制\n- 成就解锁弹窗\n- 推送通知\n- 成就动画\n- 分享按钮\n\n## ⏱️ 预计时间\n3天\n\n## 🏷️ 标签\nbackend, frontend, gamification, achievements",
    "labels": ["backend", "frontend", "gamification", "achievements"]
  },
  {
    "title": "🕸️ WebView集成 - 小游戏容器",
    "body": "## 📋 任务描述\n实现WebView容器用于集成小游戏\n\n## ✅ 检查清单\n- [ ] 配置webview_flutter插件\n- [ ] 创建WebView容器组件 (WebViewContainer)\n- [ ] 处理页面加载状态\n- [ ] 实现JavaScript通信\n- [ ] 游戏数据与主应用交互\n- [ ] 全屏游戏体验\n- [ ] 返回按钮处理\n- [ ] 错误处理机制\n\n## 🔧 技术实现\n- 使用webview_flutter插件\n- JavaScript Channel通信\n- 游戏状态同步\n- 进度保存机制\n\n## 📱 用户体验\n- 加载动画\n- 全屏模式切换\n- 手势返回支持\n- 网络错误处理\n\n## ⏱️ 预计时间\n1天\n\n## 🏷️ 标签\nfrontend, webview, games, integration",
    "labels": ["frontend", "webview", "games", "integration"]
  },
  {
    "title": "🔄 人生重开游戏集成",
    "body": "## 📋 任务描述\n集成人生重开小游戏\n\n## ✅ 检查清单\n- [ ] 部署lifeRestart项目到服务器\n- [ ] 创建游戏入口页面 (LifeRestartPage)\n- [ ] 游戏数据与习惯系统关联\n- [ ] 游戏内获得金币和经验值\n- [ ] 游戏进度保存\n- [ ] 游戏界面优化（移动端适配）\n- [ ] 游戏成就系统\n- [ ] 游戏分享功能\n\n## 🎮 游戏关联\n- 每日打卡获得游戏次数\n- 游戏表现影响金币奖励\n- 解锁特殊游戏模式\n- 游戏成就与主成就系统同步\n\n## 📊 数据同步\n- 游戏结果保存到用户数据\n- 金币和经验值实时更新\n- 游戏统计信息\n- 排行榜功能\n\n## ⏱️ 预计时间\n2天\n\n## 🏷️ 标签\nfrontend, games, life-restart, integration",
    "labels": ["frontend", "games", "life-restart", "integration"]
  },
  {
    "title": "🐸 旅行青蛙游戏集成",
    "body": "## 📋 任务描述\n集成旅行青蛙小游戏\n\n## ✅ 检查清单\n- [ ] 部署TravelFrog项目到服务器\n- [ ] 创建游戏入口页面 (TravelFrogPage)\n- [ ] 游戏与习惯系统关联\n- [ ] 青蛙旅行与打卡行为关联\n- [ ] 游戏道具商店\n- [ ] 游戏进度同步\n- [ ] 移动端界面优化\n- [ ] 游戏数据统计\n\n## 🎮 游戏机制\n- 每日打卡解锁青蛙旅行\n- 旅行时间与现实时间同步\n- 收集明信片和纪念品\n- 青蛙等级系统\n\n## 🔄 数据关联\n- 打卡频率影响青蛙状态\n- 游戏成就与主成就系统同步\n- 游戏内购买使用应用金币\n- 旅行记录保存\n\n## ⏱️ 预计时间\n2天\n\n## 🏷️ 标签\nfrontend, games, travel-frog, integration",
    "labels": ["frontend", "games", "travel-frog", "integration"]
  },
  {
    "title": "🎨 设计系统实现 - 基础样式",
    "body": "## 📋 任务描述\n实现UI/UX设计文档中的基础样式系统\n\n## ✅ 检查清单\n- [ ] 颜色系统实现（主色调、辅助色、中性色）\n- [ ] 字体系统配置（字体族、大小、权重）\n- [ ] 间距系统实现（8px网格系统）\n- [ ] 圆角系统实现（xs到full）\n- [ ] 阴影系统实现（xs到xl）\n- [ ] 主题配置（亮色/暗色主题）\n- [ ] 响应式断点设置\n- [ ] 样式工具类封装\n\n## 🎨 设计规范\n- 遵循docs/UI_UX_DOC.md设计规范\n- 使用Flutter ThemeData配置\n- 支持动态主题切换\n- 提供样式工具类\n\n## 📁 相关文件\n- frontend/lib/presentation/themes/app_theme.dart\n- frontend/lib/presentation/themes/light_theme.dart\n- frontend/lib/presentation/themes/dark_theme.dart\n\n## ⏱️ 预计时间\n2天\n\n## 🏷️ 标签\nfrontend, ui, design-system, theme",
    "labels": ["frontend", "ui", "design-system", "theme"]
  },
  {
    "title": "🧩 基础组件库实现",
    "body": "## 📋 任务描述\n实现设计文档中的基础UI组件\n\n## ✅ 检查清单\n- [ ] 按钮组件（主要、次要、文本按钮）\n- [ ] 输入框组件（带验证状态）\n- [ ] 卡片组件（可定制样式）\n- [ ] 进度条组件\n- [ ] 加载指示器\n- [ ] 错误提示组件\n- [ ] 空状态组件\n- [ ] 网络错误处理组件\n\n## 🎨 组件规范\n- 遵循Material Design规范\n- 支持自定义样式\n- 提供完整的props接口\n- 包含使用示例\n\n## 📁 相关文件\n- frontend/lib/presentation/widgets/common/custom_button.dart\n- frontend/lib/presentation/widgets/common/custom_text_field.dart\n- frontend/lib/presentation/widgets/common/loading_widget.dart\n\n## ⏱️ 预计时间\n3天\n\n## 🏷️ 标签\nfrontend, ui, components, widgets",
    "labels": ["frontend", "ui", "components", "widgets"]
  },
  {
    "title": "📊 统计与图表功能",
    "body": "## 📋 任务描述\n实现用户习惯的统计分析和图表展示\n\n## ✅ 检查清单\n- [ ] 统计API开发 (GET /api/user/stats)\n- [ ] 习惯完成率统计\n- [ ] 连续打卡趋势图\n- [ ] 月度/年度统计视图\n- [ ] 习惯分类统计\n- [ ] 图表组件实现（柱状图、折线图）\n- [ ] 数据筛选功能\n- [ ] 统计分享功能\n\n## 📈 图表类型\n- 打卡日历热力图\n- 连续天数趋势图\n- 习惯完成率饼图\n- 月度对比柱状图\n\n## 📱 交互功能\n- 时间范围选择\n- 习惯筛选\n- 图表类型切换\n- 数据导出\n\n## ⏱️ 预计时间\n3天\n\n## 🏷️ 标签\nbackend, frontend, stats, charts",
    "labels": ["backend", "frontend", "stats", "charts"]
  },
  {
    "title": "🔔 推送通知系统",
    "body": "## 📋 任务描述\n实现习惯提醒推送通知系统\n\n## ✅ 检查清单\n- [ ] 本地通知配置\n- [ ] 提醒时间设置API\n- [ ] 通知权限管理\n- [ ] 每日提醒通知\n- [ ] 连续提醒通知\n- [ ] 通知内容定制\n- [ ] 通知点击处理\n- [ ] 通知设置界面\n\n## ⏰ 提醒类型\n- 每日习惯提醒\n- 连续打卡提醒\n- 成就解锁通知\n- 系统消息通知\n\n## 📱 平台适配\n- Android通知渠道\n- iOS通知权限\n- 通知图标和声音\n- 后台处理\n\n## ⏱️ 预计时间\n2天\n\n## 🏷️ 标签\nfrontend, notifications, reminders, mobile",
    "labels": ["frontend", "notifications", "reminders", "mobile"]
  },
  {
    "title": "🧪 单元测试 - 后端API",
    "body": "## 📋 任务描述\n为后端API编写完整的单元测试\n\n## ✅ 检查清单\n- [ ] 用户认证API测试\n- [ ] 习惯管理API测试\n- [ ] 打卡记录API测试\n- [ ] 成就系统API测试\n- [ ] 游戏相关API测试\n- [ ] 错误处理测试\n- [ ] 权限验证测试\n- [ ] 数据库操作测试\n\n## 🧪 测试框架\n- Jest测试框架\n- Supertest进行HTTP测试\n- 测试覆盖率>80%\n- Mock数据库和外部服务\n\n## 📊 测试内容\n- 正常流程测试\n- 边界条件测试\n- 错误处理测试\n- 性能测试\n\n## ⏱️ 预计时间\n3天\n\n## 🏷️ 标签\nbackend, testing, unit-tests, quality",
    "labels": ["backend", "testing", "unit-tests", "quality"]
  },
  {
    "title": "📱 集成测试 - 前端",
    "body": "## 📋 任务描述\n为前端应用编写集成测试\n\n## ✅ 检查清单\n- [ ] 用户认证流程测试\n- [ ] 习惯管理流程测试\n- [ ] 打卡功能测试\n- [ ] 游戏集成测试\n- [ ] 网络错误处理测试\n- [ ] 离线模式测试\n- [ ] 响应式布局测试\n- [ ] 性能测试\n\n## 🧪 测试框架\n- Flutter集成测试\n- Mockito进行mock测试\n- Widget测试\n- 端到端测试\n\n## 📱 测试场景\n- 新用户注册登录流程\n- 创建和管理习惯\n- 每日打卡操作\n- 游戏功能使用\n\n## ⏱️ 预计时间\n3天\n\n## 🏷️ 标签\nfrontend, testing, integration-tests, quality",
    "labels": ["frontend", "testing", "integration-tests", "quality"]
  },
  {
    "title": "🚀 应用打包与发布",
    "body": "## 📋 任务描述\n完成应用打包和发布准备工作\n\n## ✅ 检查清单\n- [ ] 配置应用签名\n- [ ] 生成发布版APK\n- [ ] 应用图标和启动页\n- [ ] 版本信息配置\n- [ ] 后端服务器部署\n- [ ] 数据库生产环境配置\n- [ ] 域名和SSL证书配置\n- [ ] 监控和日志系统\n\n## 📦 发布配置\n- Android发布配置\n- 应用签名证书\n- 版本号管理\n- 发布渠道配置\n\n## 🌐 部署环境\n- 生产服务器配置\n- Docker容器化部署\n- 环境变量管理\n- 监控告警设置\n\n## ⏱️ 预计时间\n3天\n\n## 🏷️ 标签\ndeployment, release, production, devops",
    "labels": ["deployment", "release", "production", "devops"]
  }
]